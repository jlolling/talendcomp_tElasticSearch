	<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String nodes = ElementParameterParser.getValue(node, "__NODES__");
	if (nodes == null || nodes.trim().isEmpty()) {
		nodes = "null";
	}
	boolean encrypted = "true".equals(ElementParameterParser.getValue(node, "__ENCRYPTED__")); 
	boolean useAuth = "true".equals(ElementParameterParser.getValue(node, "__USE_AUTHENTICATION__"));
	String user = ElementParameterParser.getValue(node, "__USER__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");
	boolean log4jEnabled = "true".equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	String cfile = ElementParameterParser.getValue(node.getProcess(), "__CERTIFICATE_FILE__");
	if (cfile == null) {
		cfile = "null";
	}
%>
	de.jlo.talendcomp.elasticsearch.ElasticClient client_<%=cid%> = new de.jlo.talendcomp.elasticsearch.ElasticClient();
<%	if (useAuth) { %>
	// use authentication
	client_<%=cid%>.setUser(<%=user%>); 
	client_<%=cid%>.setPassword(<%=user%>); 
<%	} %>
	try {
		client_<%=cid%>.setNodes(<%=nodes%>, <%=encrypted%>);
		client_<%=cid%>.setPathToCertificate(<%=cfile%>);
		client_<%=cid%>.setupClient();
	} catch (Exception e) {
		String message = "Setup ElasticSearch client failed: " + e.getMessage();
		globalMap.put("<%=cid%>_ERROR_MESSAGE", message);
<%	if (log4jEnabled) { %>
		log.error(message, e);
<%	} %>
		throw e;
	}
	de.jlo.talendcomp.elasticsearch.RequestExecuter <%=cid%> = new de.jlo.talendcomp.elasticsearch.RequestExecuter(client_<%=cid%>);
	globalMap.put("<%=cid%>", <%=cid%>);
	int nb_line_<%=cid%> = 0;